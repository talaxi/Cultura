::ng-deep ngb-modal-backdrop {
  z-index: 1050 !important;
}

.selectedBarnModal {
  height: 100%;
  background-color: var(--background-secondary);
  color: var(--foreground-default);
}

.infoText {
  text-align: center;
}

.centered {
  text-align: center;
}

.rightAligned {
  text-align: right;
}

.flex {
  display: flex;
  justify-content: space-between;
}

.barnRow {
  width: 35%;
  margin: auto;
  padding: .5rem;
}

.rightSpaced {
  margin-right: .5rem;
}

.typeContainer {
  width: 100%;
  display: flex;
  justify-content: space-around;
}

.customLabel {
  font-weight: 700;
  text-align: center;
  width: 100%;
  /* needs to match the size of the main grid */
}

.progressBarContainer {
  height: 2rem;
}

.progressBar {
  height: 2rem;
}

.progressBar>div,
.progress-bar,
.progressBar div {
  -webkit-transition: initial !important;
  -o-transition: initial !important;
  transition: initial !important;
}

.gridContainer {
  height: 100%;
  display: grid;
  grid-template-columns: auto;
  grid-template-rows: auto;
  justify-content: stretch;
  grid-template-areas:
    "trainingName trainingStats trainingTimeToComplete";
}

.trainingName {
  grid-area: trainingName;
}

.trainingStats {
  grid-area: trainingStats;
}

.trainingTimeToComplete {
  grid-area: trainingTimeToComplete;
}

.infoGridContainer {
  height: 100%;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: auto;
  justify-content: stretch;
  grid-template-areas:
    "unassign info back";
}

.unassign {
  padding-top: .25rem;
  grid-area: unassign;
}

.info {
  grid-area: info;
}

.back {
  padding-top: .25rem;
  grid-area: back;
}

.trainingGrid {
  height: 100%;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: auto;
  justify-content: stretch;
  grid-template-areas:
    "refreshTraining trainingTimer trainingSpacer";
}

.refreshTraining {
  grid-area: refreshTraining;
}

.trainingTimer {
  grid-area: trainingTimer;
}

.trainingSpacer {
  grid-area: trainingSpacer;
}

.trainingDescription {
  text-align: center;
}

.filterActive {
  font-weight: bold;
  color: var(--foreground-secondary);
}

.filterGridContainer {
  height: 100%;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: auto;
  justify-content: stretch;
  grid-template-areas:
    "facilitySizeFilter resetFiltersHeader statFilter";
}

.facilitySizeFilter {
  grid-area: facilitySizeFilter;
}

.resetFiltersHeader {
  grid-area: resetFiltersHeader;
}

.statFilter {
  grid-area: statFilter;
}

.changeTrainingHeader {
  text-align: center;
}

.popoverClass {
  white-space: pre-line;
}

.modalClass {
  background-color: var(--background-secondary);
  border-color: var(--background-tertiary);
  color: var(--foreground-default);
}

.specializationType {
  text-decoration: underline solid transparent;
  transition: text-decoration .3s ease;
  display: inline-block;
}

.selectedSpecialization {
  font-weight: bold;
  text-decoration: underline solid Currentcolor;
}

.sizeButtonSpacing {
  width: 4rem;
}

.sizeSpacing {
  margin-left: 4rem;
}

.tutorialActive {
  border: red 1px solid !important;
}

.activeTrainingOption {
  font-weight: bold;
  color: var(--foreground-secondary);
}

.spaceEvenly {
  display: flex;
  justify-content: space-evenly;
}

.filterMargins {
  display: flex;
  justify-content: center;
  gap: 3%;
}

.resetSpecializationInfo {
  text-align: center;
}

.mobileVersion {
  display: none;
}

@media (max-width: 800px) {
  .filterGridContainer {
    height: 100%;
    display: grid;
    grid-template-columns: 2fr 1fr 2fr;
    grid-template-rows: auto;
    justify-content: stretch;
    grid-template-areas:
      "facilitySizeFilter resetFiltersHeader statFilter";
  }

  .barnRow {
    width: 100%;
  }

  .desktopVersion {
    display: none;
  }

  .mobileVersion {
    display: block;
  }
  .sizeSpacing {
    margin-left: 0;
  }
}